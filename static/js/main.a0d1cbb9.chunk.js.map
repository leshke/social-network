{"version":3,"sources":["components/Menu/Menu.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/common/Preloader.module.css","components/Messages/CurrentDialog/CurrentDialog.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/Messages.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormControl/FormControl.module.css","assets/img/avatar.png","serviceWorker.js","components/common/Preloader.jsx","api/api.js","redux/reducer-auth.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","components/Menu/Menu.js","redux/reducer-messages.js","components/Messages/CurrentDialog/CurrentDialog.js","components/Messages/CurrentDialog/CurrentDialogContainer.js","hoc/withRedirect.js","components/Messages/Dialog/Dialog.js","components/Messages/Dialog/DialogContainer.js","components/Messages/Messages.js","redux/reducer-profile.js","components/Profile/MyPosts/Post/Post.js","validators/vaildators.js","components/common/FormControl/FormControl.js","components/Profile/MyPosts/MyPosts.js","components/Profile/ProfileInfo/StatusWithHook.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/reducer-users.js","components/Users/User/User.js","components/Users/Pagination.js","components/Users/Users.js","components/Users/UsersContainer.js","redux/reducer-app.js","App.js","redux/redux-state.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Preloader","className","s","loadingio_spinner_dual_ring_i0v1g0gcmji","ldio_xvbgjsd3oz","instance","require","default","create","baseURL","withCredentials","headers","userAPI","currentPage","pageSize","get","userId","post","delete","headerAPI","email","password","rememberMe","profileAPI","status","put","ERROR","initialState","id","login","isAuth","error","setAuthUser","type","data","getAuth","dispatch","a","response","resultCode","reducerAuth","state","action","Header","props","header","logo","src","alt","onClick","logout","to","HeaderContainer","this","React","Component","connect","auth","messages","required","value","undefined","onSubmit","formData","render","handleSubmit","submitting","name","placeholder","autoComplete","validate","input","meta","touched","component","disabled","Menu","menu","activeClassName","selected","dialogs","reducerMessages","message","messageText","AddNewMessageForm","sendMessage","messageBox","CurrentDialog","messagesElements","messageState","map","i","key","CurrentDialogContainer","dialogsPage","mapStateToProps","withAuthRedirect","Dialog","dialogsElement","dialogsState","dialog","compose","Messages","dialogsWrapper","DialogContainer","ADD_POST","SET_PROFILE","posts","likes","userProfile","setProfileStatus","reducerProfile","Post","like","composeValidators","validators","reduce","validator","Textarea","formControl","PostForm","Promise","resolve","setTimeout","addPost","maxValue","pristine","form","event","promise","then","reset","length","MyPosts","memo","postsElements","profileState","profileWrapper","ProfileStatusWithHook","useState","editMode","toggleEditMode","changeStatus","useEffect","onToggleEditMode","updateStatus","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","profileImg","avatar","photos","small","aboutMe","fullName","Profile","userProfileStatus","updatePost","ProfileAPI","getProfile","getStatus","authorizedUserId","params","profilePage","withRouter","users","totalUsers","isFetching","followingProgress","setTotalUsers","togglePreloader","followUser","unfollowUser","toggleProgressFollowing","reducerUsers","user","followed","filter","User","usersState","user_container","avatar_container","some","unfollow","follow","PaginationContainer","activePage","pageNumber","onPageChange","setState","console","log","pagesCount","Math","ceil","paginationContainer","hideNavigation","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","bind","PureComponent","Users","UsersAPIContainer","page","getUsers","setCurrentPage","usersPage","totalCount","items","initialized","reducerApp","initialize","app","initializeApp","path","ProfileContainer","UsersContainer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a0d1cbb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__mIZ5e\",\"selected\":\"Menu_selected__3l9o5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_container\":\"Users_user_container__S1izT\",\"avatar_container\":\"Users_avatar_container__1WHKm\",\"paginationContainer\":\"Users_paginationContainer__1ky9Z\",\"active\":\"Users_active__2qoGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"ProfileInfo_profileWrapper__1vmL0\",\"newPost\":\"ProfileInfo_newPost__Gns_-\",\"avatar\":\"ProfileInfo_avatar__2NF7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5kPL2\",\"logo\":\"Header_logo__3qdCF\",\"login\":\"Header_login__2Evmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldio_xvbgjsd3oz\":\"Preloader_ldio_xvbgjsd3oz__3Ykv3\",\"loadingio_spinner_dual_ring_i0v1g0gcmji\":\"Preloader_loadingio_spinner_dual_ring_i0v1g0gcmji__1KPeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"CurrentDialog_messageBox__3AWqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__JkcFf\",\"selected\":\"Dialog_selected__3G6lQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Messages_dialogsWrapper__3zytG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__B2VDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"MyPosts_profileWrapper__1fH64\",\"profileImg\":\"MyPosts_profileImg__3DdOi\",\"newPost\":\"MyPosts_newPost__3kCg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2YwPd\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.bbc9d3ef.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return <div className={s.loadingio_spinner_dual_ring_i0v1g0gcmji} >\r\n        <div className={s.ldio_xvbgjsd3oz} >\r\n            <div>\r\n            </div>\r\n            <div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","const { default: Axios } = require(\"axios\");\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '9e1fc4f1-b347-4f50-ad71-0725d0e94fa1'\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsersFromServer: (currentPage, pageSize) => instance.get(`users?page=${currentPage}&count=${pageSize}`),\r\n    followUser: (userId) => instance.post(`/follow/${userId}`),\r\n    unfollowUser: (userId) => instance.delete(`/follow/${userId}`)\r\n}\r\n\r\nexport const headerAPI = {\r\n    getAuth: () => instance.get(`auth/me`),\r\n    login: (email, password, rememberMe) => instance.post(`/auth/login`, { email, password, rememberMe }),\r\n    logout: () => instance.delete(`/auth/login`),\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) => instance.get(`/profile/${userId}`),\r\n    getProfileStatus: (userId) => instance.get(`/profile/status/${userId}`),\r\n    updateProfileStatus: (status) => instance.put(`/profile/status`, { status: status })\r\n}\r\n","import { headerAPI } from \"../api/api\";\r\n\r\nconst SET_AUTH_USER = 'auth/SET_AUTH_USER';\r\nconst ERROR = 'auth/ERROR';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    error: null\r\n}\r\n\r\nconst reducerAuth = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst setAuthUser = (id, email, login, isAuth) => ({ type: SET_AUTH_USER, data: { id, email, login, isAuth } });\r\nconst hasError = (error) => ({ type: ERROR, error });\r\n\r\n//thunk creators\r\nexport const getAuth = () => {\r\n    return async (dispatch) => {\r\n        let response = await headerAPI.getAuth()\r\n        if (response.data.resultCode === 0) {\r\n            let data = response.data.data;\r\n            dispatch(setAuthUser(data.id, data.email, data.login, true))\r\n        }\r\n    }\r\n    //with then\r\n    // return headerAPI.getAuth()\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             let data = response.data.data;\r\n    //             dispatch(setAuthUser(data.id, data.email, data.login, true))\r\n    //         }\r\n    //     })\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await headerAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        }\r\n        else {\r\n            dispatch(hasError(response.data.messages[0]))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await headerAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUser(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducerAuth;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/bf/Front-end-logo-color%402x.png\" alt=\"\" />\r\n            </div>\r\n            <div className={s.login}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        {props.login} <button onClick={props.logout}>logout</button>\r\n                    </div> :\r\n                    <NavLink to=\"/login\">\r\n                        <button>login</button>\r\n                    </NavLink>}\r\n            </div>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/reducer-auth';\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // Axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n        //     withCredentials: true\r\n        // }).then(response => {\r\n        //     if (response.data.resultCode === 0) {\r\n        //         let { id, email, login } = response.data.data;\r\n        //         this.props.setAuthUser(id, email, login)\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { login } from '../../redux/reducer-auth'\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"profile\" />\r\n    }\r\n\r\n    const required = value => (value ? undefined : \"Required\");\r\n\r\n    return <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting }) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Login</label>\r\n                    <Field name=\"email\" placeholder=\"email\" autoComplete=\"on\" validate={required} render={({ input, meta }) => (\r\n                        <div>\r\n                            <input {...input} />\r\n                            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n                        </div>\r\n                    )} />\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <Field name=\"password\" component=\"input\" placeholder=\"password\" type=\"password\" autoComplete=\"on\" />\r\n                </div>\r\n                <div>\r\n                    <label>Remember me</label>\r\n                    <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n                </div>\r\n                <button disabled={submitting} type=\"submit\">Submit</button>\r\n                \r\n                {props.error && <span>{props.error}</span>}\r\n            </form>\r\n        )}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Menu.module.css'\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <aside className={s.menu}>\r\n      <div><NavLink to=\"/profile\" activeClassName={s.selected}>Profile</NavLink></div>\r\n      <div><NavLink to=\"/message\" activeClassName={s.selected}>Messages</NavLink></div>\r\n      <div><NavLink to=\"/news\" activeClassName={s.selected}>News</NavLink></div>\r\n      <div><NavLink to=\"/music\" activeClassName={s.selected}>Music</NavLink></div>\r\n      <div><NavLink to=\"/settings\" activeClassName={s.selected}>Settings</NavLink></div>\r\n      <div><NavLink to=\"/users\" activeClassName={s.selected}>Find Users</NavLink></div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Menu;","const ADD_MESSAGE = \"message/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Vasya\" },\r\n        { id: 2, name: \"Ira\" },\r\n        { id: 3, name: \"Petya\" },\r\n        { id: 4, name: \"Mikel\" },\r\n        { id: 5, name: \"Bill\" }\r\n    ],\r\n    messages: [\r\n        { name: \"Hey\" },\r\n        { name: \"How are you?\" },\r\n        { name: \"blabla\" },\r\n        { name: \"abrakadabra\" }\r\n    ],\r\n}\r\n\r\nconst reducerMessages = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let message = {\r\n                name: action.messageText\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, message]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creator\r\nexport const actionAddMessage = (messageText) => ({ type: ADD_MESSAGE, messageText });\r\n\r\nexport default reducerMessages;","import React from 'react'\r\nimport { Field, Form } from 'react-final-form';\r\nimport s from './CurrentDialog.module.css'\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.message);\r\n    }\r\n\r\n    return <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={s.messageBox}>\r\n                    <Field name=\"message\" component=\"textarea\" placeholder=\"Write your message\" />\r\n                </div>\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        )}\r\n    />\r\n}\r\n\r\nconst CurrentDialog = (props) => {\r\n    const messagesElements = props.messageState.messages.map((message, i) => <div key={i}>{message.name}</div>)\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            { messagesElements}\r\n            <AddNewMessageForm sendMessage={props.sendMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentDialog;","import { connect } from 'react-redux';\r\nimport { actionAddMessage } from '../../../redux/reducer-messages';\r\n/* import StoreContext from '../../../StoreContext'; */\r\nimport CurrentDialog from './CurrentDialog'\r\n\r\n/* const CurrentDialogContainer = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        {\r\n            (store) => {\r\n\r\n                let state = store.getState().dialogsPage;\r\n\r\n                let sendMessage = () => {\r\n                    store.dispatch(actionAddMessage())\r\n                }\r\n\r\n                let updateMessage = (text) => {\r\n                    store.dispatch(actionUpdateMessage(text))\r\n                }\r\n                return <CurrentDialog messageState={state} sendMessage={sendMessage} updateMessage={updateMessage}></CurrentDialog>\r\n            }\r\n        }\r\n\r\n    </StoreContext.Consumer>\r\n\r\n\r\n} */\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        messageState: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => dispatch(actionAddMessage(message)),\r\n    }\r\n}\r\n\r\nconst CurrentDialogContainer = connect(MapStateToProps, MapDispatchToProps)(CurrentDialog)\r\n\r\nexport default CurrentDialogContainer;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    let redirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n        return <Component { ...props}/>\r\n    }\r\n    return connect(mapStateToProps)(redirectComponent)\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    const dialogsElement = props.dialogsState\r\n        .map((dialog, i) =>\r\n            <NavLink to={\"/message/\" + dialog.id} key={i} activeClassName={s.selected}>\r\n                {dialog.name}\r\n            </NavLink>)\r\n\r\n    return <div className={s.dialogs}>\r\n        {dialogsElement}\r\n    </div>\r\n}\r\n\r\nexport default Dialog;","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../../hoc/withRedirect'\r\n/* import StoreContext from '../../../StoreContext' */\r\nimport Dialog from './Dialog'\r\n\r\n/* const DialogContainer = () => {\r\n    return <StoreContext.Consumer>\r\n        {\r\n            (store) => {\r\n                let state = store.getState().dialogsPage.dialogs;\r\n                return <Dialog dialogsState={state}></Dialog>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n} */\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        dialogsState: state.dialogsPage.dialogs\r\n\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect //hoc for authorisation redirect to login\r\n)(Dialog)\r\n","import React from 'react';\r\nimport CurrentDialogContainer from './CurrentDialog/CurrentDialogContainer';\r\nimport DialogContainer from './Dialog/DialogContainer';\r\nimport s from './Messages.module.css'\r\n\r\nconst Messages = () => {\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <DialogContainer />\r\n            <CurrentDialogContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD_POST';\r\nconst SET_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_PROFILE_STATUS = 'profile/SET_USER_PROFILE_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { name: \"Hi, how are you?\", likes: 11 },\r\n        { name: \"This is my first post\", likes: 19 }\r\n    ],\r\n    userProfile: null,\r\n    status: ''\r\n}\r\n\r\nconst reducerProfile = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n                name: action.post,\r\n                likes: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, post]\r\n            }\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const addPost = (post) => ({ type: ADD_POST, post });\r\nconst setProfile = (userProfile) => ({ type: SET_PROFILE, userProfile });\r\nconst setProfileStatus = (status) => ({ type: SET_PROFILE_STATUS, status });\r\n\r\n//thunk creators\r\nexport const getProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setProfile(response.data))\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getProfileStatus(userId)\r\n        dispatch(setProfileStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateProfileStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setProfileStatus(status))\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducerProfile;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"https://w0.pngwave.com/png/1008/377/computer-icons-avatar-user-profile-avatar-png-clip-art.png\" alt=\"\" />\r\n            <span>{props.name}</span>\r\n            <div>likes: {props.like}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","export const required = value => (value ? undefined : 'Required field')\r\n\r\nexport const maxValueCalc = (maxValue) => (value) => {\r\n    if (value !== undefined && value.length > maxValue) return `Max symbols ${maxValue}`\r\n    return undefined\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)","import React from 'react';\r\nimport s from './FormControl.module.css'\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const error = meta.error && meta.touched;\r\n    return <div className={error ? s.formControl : ''}>\r\n        <textarea {...input} {...props} />\r\n        {error && <span>{meta.error}</span>}\r\n    </div>\r\n}","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { composeValidators, maxValueCalc } from '../../../validators/vaildators';\r\nimport { Textarea } from '../../common/FormControl/FormControl';\r\n\r\nconst PostForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        return new Promise(resolve => {\r\n            setTimeout(resolve);\r\n            props.addPost(formData.post);\r\n        })\r\n    }\r\n    return <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, submitting, pristine, form }) => (\r\n            <form onSubmit={event => {\r\n                const promise = handleSubmit(event);\r\n                promise.then(() => {\r\n                    form.reset();\r\n                })\r\n                return promise;\r\n            }}>\r\n                <Field name=\"post\" placeholder=\"Post text\" validate={composeValidators(maxValueCalc(99))} render={Textarea} />\r\n                <button disabled={submitting || pristine}>Add</button>\r\n            </form>\r\n        )}\r\n    />\r\n}\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    const postsElements = props.profileState.map((post, i) => <Post key={i} name={post.name} like={post.likes} />)\r\n    return (\r\n        <div className={s.profileWrapper}>\r\n            <h3>My posts</h3>\r\n            <PostForm addPost={props.addPost} />\r\n            {postsElements}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React, { useState, useEffect } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHook = React.memo((props) => {\r\n\r\n    let [editMode, toggleEditMode] = useState(false)\r\n    let [status, changeStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        changeStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onToggleEditMode = () => {\r\n        if (!editMode) {\r\n            toggleEditMode(true)\r\n        }\r\n        else {\r\n            toggleEditMode(false)\r\n        }\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        changeStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            !editMode ?\r\n                <span onClick={onToggleEditMode}>{props.status || 'This user has not status'}</span> :\r\n                <input onChange={onChangeStatus} autoFocus={true} onBlur={onToggleEditMode} value={status || ''}></input>\r\n        }\r\n    </div>\r\n})\r\n\r\nexport default ProfileStatusWithHook","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader'\r\nimport ProfileStatus from './StatusWithHook'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.userProfile) return <Preloader />\r\n    return (\r\n        <div className={s.profileImg}>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            <div>\r\n                <div className={s.avatar}>\r\n                    <img src={props.userProfile.photos.small} alt=\"ava\" />\r\n                </div>\r\n                <p>{props.userProfile.aboutMe}</p>\r\n                <p>{props.userProfile.fullName}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo userProfile={props.userProfile} status={props.userProfileStatus} updateStatus={props.updateStatus}/>\r\n            <MyPosts addPost={props.addPost} profileState={props.profileState.posts} updatePost={props.updatePost} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withRedirect';\r\nimport { addPost, getProfile, getStatus, updateStatus } from '../../redux/reducer-profile';\r\nimport Profile from './Profile';\r\n\r\n// import StoreContext from '../../StoreContext';\r\n// const ProfileContainer = (props) => {\r\n//     let addPost = () => {\r\n//         props.dispatch(actionAddPost());\r\n//     }\r\n//     let updatePost = (text) => {\r\n//         props.dispatch(actionUpdatePost(text));\r\n//     } \r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState().profilePage;\r\n\r\n//                     let addPost = () => {\r\n//                         store.dispatch(actionAddPost());\r\n//                     }\r\n\r\n//                     let updatePost = (text) => {\r\n//                         store.dispatch(actionUpdatePost(text));\r\n//                     }\r\n//                     return <Profile profileState={state} addPost={addPost} updatePost={updatePost} />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nconst ProfileAPI = React.memo(({ getProfile, getStatus, authorizedUserId, ...props }) => {\r\n    useEffect(() => {\r\n        let userId = props.match.params.userId;\r\n        if (!userId) {\r\n            userId = authorizedUserId;\r\n        }\r\n        getProfile(userId);\r\n        getStatus(userId);\r\n    }, [getProfile, getStatus, authorizedUserId, props.match.params.userId])\r\n    return <Profile {...props} />\r\n})\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        profileState: state.profilePage,\r\n        userProfile: state.profilePage.userProfile,\r\n        userProfileStatus: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.id\r\n    }\r\n}\r\n\r\n//compose\r\nexport default compose(\r\n    connect(MapStateToProps, { addPost, getProfile, getStatus, updateStatus }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileAPI)\r\n\r\n\r\n// old code without compose\r\n// let withRouterContainerComponent = withRouter(ProfileAPI)\r\n\r\n// let authRedirect = withAuthRedirect(withRouterContainerComponent)\r\n\r\n// const ProfileContainer = connect(MapStateToProps, {\r\n//     addPost,\r\n//     updatePost,\r\n//     setUserProfile\r\n// })(authRedirect)\r\n\r\n// export default ProfileContainer;","import { userAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_TOTAL_USERS = 'users/SET_TOTAL_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst TOGGLE_PRELOADER = 'users/TOGGLE_PRELOADER';\r\nconst FOLLOW_USER = 'users/FOLLOW_USER';\r\nconst UNFOLLOW_USER = 'users/UNFOLLOW_USER';\r\nconst TOGGLE_PROGRESS_FOLLOWING = 'users/TOGGLE_PROGRESS_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    totalUsers: null,\r\n    isFetching: false,\r\n    followingProgress: []\r\n}\r\n\r\n//reducer\r\nconst reducerUsers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_PROGRESS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setTotalUsers = (totalUsers) => ({ type: SET_TOTAL_USERS, totalUsers });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nconst togglePreloader = (isFetching) => ({ type: TOGGLE_PRELOADER, isFetching });\r\nconst followUser = (userId) => ({ type: FOLLOW_USER, userId });\r\nconst unfollowUser = (userId) => ({ type: UNFOLLOW_USER, userId });\r\nconst toggleProgressFollowing = (isFetching, userId) => ({ type: TOGGLE_PROGRESS_FOLLOWING, isFetching, userId });\r\n\r\n//thunk creators\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(togglePreloader(true))\r\n    let response = await userAPI.getUsersFromServer(currentPage, pageSize)\r\n    dispatch(togglePreloader(false))\r\n    dispatch(setTotalUsers(response.data.totalCount));\r\n    dispatch(setUsers(response.data.items))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleProgressFollowing(true, userId))\r\n    let response = await userAPI.unfollowUser(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(unfollowUser(userId))\r\n    }\r\n    dispatch(toggleProgressFollowing(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleProgressFollowing(true, userId))\r\n    let response = await userAPI.followUser(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followUser(userId))\r\n    }\r\n    dispatch(toggleProgressFollowing(false, userId))\r\n}\r\n\r\nexport default reducerUsers;","import React from 'react';\r\nimport s from '../Users.module.css';\r\nimport avatar from '../../../assets/img/avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = React.memo((props) => {\r\n    return <div>\r\n        {\r\n            props.usersState.map((user) => {\r\n                return <div key={user.id} className={s.user_container}>\r\n                    <div className={s.avatar_container}>\r\n                        <NavLink to={'profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : avatar} alt=\"avatar\" />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                                props.follow(user.id)\r\n                            }}>Follow</button>\r\n                    }\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n})\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nclass PaginationContainer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePage: this.props.currentPage\r\n        };\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        this.props.onPageChange(pageNumber)\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        let pagesCount = Math.ceil(this.props.totalUsers / this.props.pageSize);\r\n        return (\r\n            <div className={s.paginationContainer}>\r\n                <Pagination\r\n                    hideNavigation\r\n                    activePage={this.state.activePage}\r\n                    itemsCountPerPage={this.props.pageSize}\r\n                    totalItemsCount={pagesCount}\r\n                    pageRangeDisplayed={10}\r\n                    onChange={this.handlePageChange.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/* const Pagination1 = React.memo((props, { portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortion] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.pagination}>\r\n        {portionNumber > 1 && <button onClick={() => setPortion(portionNumber - 1)}>prev</button>}\r\n\r\n        {\r\n            pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p, i) => {\r\n                    return <span key={i} onClick={(e) => props.onPageChange(p)} className={props.currentPage === p ? s.active : \"\"}>{p}</span>\r\n                })\r\n\r\n        }\r\n        {portionCount > portionNumber && <button onClick={() => setPortion(portionNumber + 1)}>prev</button>}\r\n    </div>\r\n}) */\r\n\r\nexport default PaginationContainer;","import React from 'react';\r\nimport User from './User/User';\r\nimport PaginationContainer from './Pagination';\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n        <PaginationContainer totalUsers={props.totalUsers}\r\n            pageSize={props.pageSize}\r\n            onPageChange={props.onPageChange}\r\n            currentPage={props.currentPage} />\r\n        <User usersState={props.usersState}\r\n            followingProgress={props.followingProgress}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow} />\r\n    </div >\r\n}\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentPage, setTotalUsers, follow, unfollow, getUsers } from '../../redux/reducer-users';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withRedirect'\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n    componentDidMount() {\r\n        //with thunk\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n        //with dispatch\r\n        // this.props.togglePreloader(true)\r\n        // userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.togglePreloader(false)\r\n        //     this.props.setTotalUsers(response.data.totalCount);\r\n        //     this.props.setUsers(data.items);\r\n        // })\r\n    }\r\n\r\n    onPageChange = (page) => {\r\n        //with thunk\r\n        this.props.getUsers(page, this.props.pageSize)\r\n        this.props.setCurrentPage(page)\r\n        //with dispatch\r\n        // this.props.setCurrentPage(page)\r\n        // this.props.togglePreloader(true)\r\n\r\n        // userAPI.getUsers(page, this.props.pageSize).then(data => {\r\n        //     this.props.togglePreloader(false)\r\n        //     this.props.setUsers(data.items);\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {\r\n                this.props.isFetching ? <Preloader /> : null\r\n            }\r\n            <Users usersState={this.props.usersState}\r\n                totalUsers={this.props.totalUsers}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChange={this.onPageChange}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingProgress={this.props.followingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        usersState: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsers: state.usersPage.totalUsers,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress,\r\n    }\r\n}\r\n\r\nexport default compose(connect(MapStateToProps, {\r\n    setTotalUsers,\r\n    setCurrentPage,\r\n    follow,\r\n    unfollow,\r\n    getUsers\r\n}),\r\n    withAuthRedirect //hoc for authorisation redirect to login\r\n)(UsersAPIContainer)\r\n\r\n\r\n\r\n\r\n//dispatch in func\r\n/* const MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (userId) => dispatch(actionAddUser(userId)),\r\n        setUsers: (users) => dispatch(actionSetUsers(users)),\r\n        setTotalUsers: (totalUsers) => dispatch(actionSetTotalUsers(totalUsers)),\r\n        setCurrentPage: (page) => dispatch(actionSetCurrentPage(page))\r\n    }\r\n} */\r\n\r\n//without compose\r\n/* const UsersContainer = connect(MapStateToProps, {\r\n    setTotalUsers,\r\n    setCurrentPage,\r\n    follow,\r\n    unfollow,\r\n    getUsers\r\n})(UsersAPIContainer)\r\n\r\nexport default UsersContainer; */","import { getAuth } from \"./reducer-auth\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst reducerApp = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\nconst initializeSuccess = () => ({ type: INITIALIZE_SUCCESS });\r\n\r\n//thunk creators\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuth())\r\n    promise.then(() => {\r\n        dispatch(initializeSuccess())\r\n    })\r\n}\r\n\r\nexport default reducerApp;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './components/common/Preloader';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport Menu from './components/Menu/Menu';\nimport Messages from './components/Messages/Messages';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport { initializeApp } from './redux/reducer-app'\n\nconst App = ({ initialize, initializeApp }) => {\n\n  useEffect(() => {\n    initializeApp()\n  })\n\n  if (!initialize) return <Preloader />\n  return <div className=\"app-wrapper\">\n    <HeaderContainer />\n    <Menu />\n    <div className=\"content-wrapper\">\n      <Route path=\"/message\"\n        render={() => <Messages />} />\n      <Route path=\"/profile/:userId?\"\n        render={() => <ProfileContainer />} />\n      <Route path=\"/users\"\n        render={() => <UsersContainer />} />\n      <Route path=\"/login\"\n        render={() => <Login />} />\n    </div>\n  </div>\n}\n\nconst MapStateToProps = (state) => ({\n  initialize: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect(MapStateToProps, { initializeApp })\n)(App)\n","import reducerMessages from \"./reducer-messages\";\r\nimport reducerProfile from \"./reducer-profile\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport reducerUsers from \"./reducer-users\";\r\nimport reducerAuth from \"./reducer-auth\";\r\nimport reducerApp from \"./reducer-app\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: reducerProfile,\r\n    dialogsPage: reducerMessages,\r\n    usersPage: reducerUsers,\r\n    auth: reducerAuth,\r\n    app: reducerApp\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nwindow.state = store\r\nexport default store;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-state';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}