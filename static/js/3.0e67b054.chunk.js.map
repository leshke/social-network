{"version":3,"sources":["components/Messages/CurrentDialog/CurrentDialog.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/Messages.module.css","components/Messages/CurrentDialog/CurrentDialog.js","components/Messages/CurrentDialog/CurrentDialogContainer.js","components/Messages/Dialog/Dialog.js","components/Messages/Dialog/DialogContainer.js","components/Messages/Messages.js"],"names":["module","exports","AddNewMessageForm","props","onSubmit","formData","sendMessage","message","render","handleSubmit","className","s","messageBox","name","component","placeholder","type","CurrentDialog","messagesElements","messageState","messages","map","i","key","src","avatarImg","alt","messageWrapper","messageWrapperForm","CurrentDialogContainer","connect","state","dialogsPage","profilePage","avatar","dispatch","actionAddMessage","Dialog","dialogsElement","dialogsState","dialog","to","id","activeClassName","selected","dialogs","compose","withAuthRedirect","Messages","dialogsWrapper","DialogContainer"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,WAAa,kCAAkC,SAAW,gCAAgC,QAAU,+BAA+B,eAAiB,sCAAsC,mBAAqB,4C,oBCAjOD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,2B,oBCA/DD,EAAOC,QAAU,CAAC,eAAiB,mC,sGCG7BC,EAAoB,SAACC,GAKvB,OAAO,kBAAC,IAAD,CACHC,SALa,SAACC,GACdF,EAAMG,YAAYD,EAASE,UAK3BC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,0BAAML,SAAUK,GACZ,yBAAKC,UAAWC,IAAEC,YACd,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAU,WAAWC,YAAY,2BAE3D,4BAAQC,KAAK,UAAb,aAwBDC,EAlBO,SAACd,GACnB,IAAMe,EAAmBf,EAAMgB,aAAaC,SACvCC,KAAI,SAACd,EAASe,GAAV,OAAgB,yBAAKZ,UAAWC,IAAEJ,QAASgB,IAAKD,GACjD,yBAAKE,IAAKrB,EAAMsB,UAAWC,IAAI,KAC/B,8BAAOnB,EAAQM,UAGvB,OAAO,yBAAKH,UAAWC,IAAES,UACrB,yBAAKV,UAAWC,IAAEgB,gBACbT,GAEL,yBAAKR,UAAWC,IAAEiB,oBACd,kBAAC,EAAD,CAAmBtB,YAAaH,EAAMG,iBCUnCuB,EAFgBC,aAbP,SAACC,GACrB,MAAO,CACHZ,aAAcY,EAAMC,YACpBP,UAAWM,EAAME,YAAYC,WAIV,SAACC,GACxB,MAAO,CACH7B,YAAa,SAACC,GAAD,OAAa4B,EAASC,YAAiB7B,QAI7BuB,CAA6Cb,G,0CC1B7DoB,EAZA,SAAClC,GACZ,IAAMmC,EAAiBnC,EAAMoC,aACxBlB,KAAI,SAACmB,EAAQlB,GAAT,OACD,kBAAC,IAAD,CAASmB,GAAI,YAAcD,EAAOE,GAAInB,IAAKD,EAAGqB,gBAAiBhC,IAAEiC,UAC5DJ,EAAO3B,SAGpB,OAAO,yBAAKH,UAAWC,IAAEkC,SACpBP,ICiBMQ,cACXhB,aAboB,SAACC,GACrB,MAAO,CACHQ,aAAcR,EAAMC,YAAYa,YAIb,WACvB,MAAO,MAOPE,IAFWD,CAGbT,G,kBClBaW,UATE,WACb,OACI,yBAAKtC,UAAWC,IAAEsC,gBACd,kBAACC,EAAD,MACA,kBAAC,EAAD","file":"static/js/3.0e67b054.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"CurrentDialog_messageBox__3AWqx\",\"messages\":\"CurrentDialog_messages__1q3wc\",\"message\":\"CurrentDialog_message__BUTd0\",\"messageWrapper\":\"CurrentDialog_messageWrapper__e5NVZ\",\"messageWrapperForm\":\"CurrentDialog_messageWrapperForm__PG4Wu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__JkcFf\",\"selected\":\"Dialog_selected__3G6lQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Messages_dialogsWrapper__3zytG\"};","import React from 'react'\r\nimport { Field, Form } from 'react-final-form';\r\nimport s from './CurrentDialog.module.css'\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.message);\r\n    }\r\n\r\n    return <Form\r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit }) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={s.messageBox}>\r\n                    <Field name=\"message\" component=\"textarea\" placeholder=\"Write your message...\" />\r\n                </div>\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        )}\r\n    />\r\n}\r\n\r\nconst CurrentDialog = (props) => {\r\n    const messagesElements = props.messageState.messages\r\n        .map((message, i) => <div className={s.message} key={i}>\r\n            <img src={props.avatarImg} alt='' />\r\n            <span>{message.name}</span>\r\n        </div>)\r\n\r\n    return <div className={s.messages}>\r\n        <div className={s.messageWrapper}>\r\n            {messagesElements}\r\n        </div>\r\n        <div className={s.messageWrapperForm}>\r\n            <AddNewMessageForm sendMessage={props.sendMessage} />\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CurrentDialog;","import { connect } from 'react-redux';\r\nimport { actionAddMessage } from '../../../redux/reducer-messages';\r\n/* import StoreContext from '../../../StoreContext'; */\r\nimport CurrentDialog from './CurrentDialog'\r\n\r\n/* const CurrentDialogContainer = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        {\r\n            (store) => {\r\n\r\n                let state = store.getState().dialogsPage;\r\n\r\n                let sendMessage = () => {\r\n                    store.dispatch(actionAddMessage())\r\n                }\r\n\r\n                let updateMessage = (text) => {\r\n                    store.dispatch(actionUpdateMessage(text))\r\n                }\r\n                return <CurrentDialog messageState={state} sendMessage={sendMessage} updateMessage={updateMessage}></CurrentDialog>\r\n            }\r\n        }\r\n\r\n    </StoreContext.Consumer>\r\n\r\n\r\n} */\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        messageState: state.dialogsPage,\r\n        avatarImg: state.profilePage.avatar,\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => dispatch(actionAddMessage(message)),\r\n    }\r\n}\r\n\r\nconst CurrentDialogContainer = connect(MapStateToProps, MapDispatchToProps)(CurrentDialog)\r\n\r\nexport default CurrentDialogContainer;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    const dialogsElement = props.dialogsState\r\n        .map((dialog, i) =>\r\n            <NavLink to={\"/message/\" + dialog.id} key={i} activeClassName={s.selected}>\r\n                {dialog.name}\r\n            </NavLink>)\r\n\r\n    return <div className={s.dialogs}>\r\n        {dialogsElement}\r\n    </div>\r\n}\r\n\r\nexport default Dialog;","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../../hoc/withRedirect'\r\n/* import StoreContext from '../../../StoreContext' */\r\nimport Dialog from './Dialog'\r\n\r\n/* const DialogContainer = () => {\r\n    return <StoreContext.Consumer>\r\n        {\r\n            (store) => {\r\n                let state = store.getState().dialogsPage.dialogs;\r\n                return <Dialog dialogsState={state}></Dialog>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n} */\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        dialogsState: state.dialogsPage.dialogs,\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect //hoc for authorisation redirect to login\r\n)(Dialog)\r\n","import React from 'react';\r\nimport CurrentDialogContainer from './CurrentDialog/CurrentDialogContainer';\r\nimport DialogContainer from './Dialog/DialogContainer';\r\nimport s from './Messages.module.css'\r\n\r\nconst Messages = () => {\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <DialogContainer />\r\n            <CurrentDialogContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;"],"sourceRoot":""}