{"version":3,"sources":["components/Login/Login.module.css","components/Login/CirclesAnimation.js","components/Login/Login.js"],"names":["module","exports","Circles","makeClassName","style","classnames","s","circle","className","container","small","medium","large","xLarge","xxLarge","connect","state","isAuth","auth","error","captcha","login","to","insideContainer","loginForm","onSubmit","formData","email","password","rememberMe","render","handleSubmit","submitting","name","placeholder","autoComplete","validate","required","Input","type","src","alt","disabled"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,gBAAkB,+BAA+B,OAAS,sBAAsB,eAAe,4BAA4B,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,UAAY,yBAAyB,QAAU,yB,8ICiB3WC,EAdC,WACZ,IAAMC,EAAgB,SAACC,GACrB,OAAOC,IAAWC,IAAEC,OAAQH,IAG9B,OAAO,yBAAKI,UAAWF,IAAEG,WACrB,yBAAKD,UAAWL,EAAcG,IAAEI,SAChC,yBAAKF,UAAWL,EAAcG,IAAEK,UAChC,yBAAKH,UAAWL,EAAcG,IAAEM,SAChC,yBAAKJ,UAAWL,EAAcG,IAAEO,UAChC,yBAAKL,UAAWL,EAAcG,IAAEQ,aC8CzBC,uBANS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBE,MAAOH,EAAME,KAAKC,MAClBC,QAASJ,EAAME,KAAKE,WAGgB,CAAEC,WAA3BN,EAlDD,SAAC,GAAuC,IAArCM,EAAoC,EAApCA,MAAOJ,EAA6B,EAA7BA,OAAQG,EAAqB,EAArBA,QAASD,EAAY,EAAZA,MAMrC,OAAIF,EACO,kBAAC,IAAD,CAAUK,GAAG,YAGjB,yBAAKd,UAAWF,IAAEiB,iBACrB,kBAAC,EAAD,MACA,yBAAKf,UAAWF,IAAEkB,WACd,uCACA,+EACA,kBAAC,IAAD,CACIC,SAdK,SAACC,GACdL,EAAMK,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASN,UAc/DU,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAjB,OACJ,0BAAMP,SAAUM,GACZ,6BACI,wCACA,kBAAC,IAAD,CAAOE,KAAK,QAAQC,YAAY,cAAcC,aAAa,KAAKC,SAAUC,IAAUP,OAAQQ,OAEhG,6BACI,2CACA,kBAAC,IAAD,CAAOL,KAAK,WAAWH,OAAQQ,IAAOJ,YAAY,WAAWE,SAAUC,IAAUE,KAAK,WAAWJ,aAAa,QAElH,6BACI,8CACA,kBAAC,IAAD,CAAOF,KAAK,aAAaH,OAAQQ,IAAOC,KAAK,cAEjD,6BACKnB,EAAU,yBAAKZ,UAAWF,IAAEc,QAASoB,IAAKpB,EAASqB,IAAI,YAAmB,KAC1ErB,EAAU,kBAAC,IAAD,CAAOa,KAAK,UAAUH,OAAQQ,IAAOJ,YAAY,kBAAqB,MAErF,4BAAQQ,SAAUV,EAAYO,KAAK,UAAnC,WACCpB,GAAS,8BAAOA","file":"static/js/4.3ac51dbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__3IGb9\",\"insideContainer\":\"Login_insideContainer__2ghE3\",\"circle\":\"Login_circle__N9y7B\",\"circle-scale\":\"Login_circle-scale__3YxS1\",\"small\":\"Login_small__LsOad\",\"medium\":\"Login_medium__3D6zg\",\"large\":\"Login_large__2lkeN\",\"xLarge\":\"Login_xLarge__bB_D2\",\"xxLarge\":\"Login_xxLarge__KIcLe\",\"loginForm\":\"Login_loginForm__301oO\",\"captcha\":\"Login_captcha__3iGMm\"};","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport classnames from 'classnames';\r\n\r\nconst Circles = () => {\r\n    const makeClassName = (style) => {\r\n      return classnames(s.circle, style)\r\n    }\r\n\r\n    return <div className={s.container}>\r\n        <div className={makeClassName(s.small)}></div>\r\n        <div className={makeClassName(s.medium)}></div>\r\n        <div className={makeClassName(s.large)}></div>\r\n        <div className={makeClassName(s.xLarge)}></div>\r\n        <div className={makeClassName(s.xxLarge)}></div>\r\n    </div>\r\n}\r\n\r\nexport default Circles","import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { login } from '../../redux/reducer-auth'\r\nimport { required } from '../../validators/vaildators'\r\nimport { Input } from '../common/FormControl/FormControl'\r\nimport Circles from './CirclesAnimation'\r\nimport s from './Login.module.css'\r\n\r\nconst Login = ({ login, isAuth, captcha, error }) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"profile\" />\r\n    }\r\n\r\n    return <div className={s.insideContainer}>\r\n        <Circles />\r\n        <div className={s.loginForm}>\r\n            <h2>Sign in</h2>\r\n            <p>Enter your email address and password to access.</p>\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                render={({ handleSubmit, submitting }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <label>Login</label>\r\n                            <Field name=\"email\" placeholder=\"Enter email\" autoComplete=\"on\" validate={required} render={Input} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Password</label>\r\n                            <Field name=\"password\" render={Input} placeholder=\"Password\" validate={required} type=\"password\" autoComplete=\"on\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>Remember me</label>\r\n                            <Field name=\"rememberMe\" render={Input} type=\"checkbox\" />\r\n                        </div>\r\n                        <div>\r\n                            {captcha ? <img className={s.captcha} src={captcha} alt=\"captcha\"></img> : null}\r\n                            {captcha ? <Field name=\"captcha\" render={Input} placeholder=\"Enter captcha\" /> : null}\r\n                        </div>\r\n                        <button disabled={submitting} type=\"submit\">Sign In</button>\r\n                        {error && <span>{error}</span>}\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}